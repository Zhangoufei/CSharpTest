@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>WebUploaderDemo(上传)</title>
    @*<script src="@Url.Content("~/Scripts/jquery-ui-1.8.20.min.js")"></script>
    <link href="@Url.Content("~/Scripts/WebUploader/webuploader.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/WebUploader/webuploader.js")"></script>*@
    <link href="../../Scripts/WebUploader/webuploader.css" rel="stylesheet" />
    <script src="../../Scripts/jquery-1.7.1.min.js"></script>
    <script src="../../Scripts/WebUploader/webuploader.js"></script>
</head>
<body>
    <div id="uploader" class="wu-example">
        <!--用来存放文件信息-->
        <div id="thelist" class="uploader-list"></div>
        <div class="btns">
            <div id="picker">选择文件</div>            
        </div>
        <div id="percent" style="width:0%"></div>
        <button id="ctlBtn" class="btn btn-default">开始上传</button>
    </div>
</body>
</html>
<script type="text/javascript">

    //创建WebUploader
    var uploader = WebUploader.create({
        // swf文件路径
        swf: '/Scripts/WebUploader/Uploader.swf',
        // 文件接收服务端。
        server: '/Home/FileUpload',
        // 选择文件的按钮。可选。
        // 内部根据当前运行是创建，可能是input元素，也可能是flash.
        pick: '#picker',
        // 不压缩image, 默认如果是jpeg，文件上传前会压缩一把再上传！
        resize: false,
        chunked: true,//是否要分片处理大文件上传
        threads: 1,//上传并发数。允许同时最大上传进程数
        chunkSize:1048576//每次上传1M
    });
    // 当有文件被添加进队列的时候
    //显示用户的选择
    var $list = $("#picker");
    uploader.on('fileQueued', function (file) {
        $list.append('<div id="' + file.id + '" class="item">' +
            '<h4 class="info">' + file.name + '</h4>' +
            '<p class="state">等待上传...</p>' +
        '</div>');
        
    });
    var startIndex = 0;//post数据包的索引
    // 文件上传过程中创建进度条实时显示。
    uploader.on('uploadProgress', function (file, percentage) {
        //var fileSize = file.size;
        //var fileStart = file.blocks[startIndex].start;//文件偏移量开始点
        //var fileEnd = file.blocks[startIndex].end;//文件偏移量结束点
        //var fileName = file.name;//文件名
        //var fileId = file.id;//对象Id
        //var fileDataJson = "{\"fileId\":\"" + fileId + "\",\"fileName\":\"" + fileName + "\",\"fileSize\":\"" + fileSize + "\",\"fileStart\":\"" + fileStart + "\",\"fileEnd\":\"" + fileEnd + "\"}";
        //document.cookie = "fileDataJson=" + fileDataJson;//文件总大小


        
        var $li = $('#' + file.id);
        var $percent = $li.find('.progress .progress-bar');
        // 避免重复创建
        if (!$percent.length) {
            $percent = $('<div class="progress progress-striped active">' +
              '<div class="progress-bar" role="progressbar" style="width: 0%">' +
              '</div>' +
            '</div>').appendTo($li).find('.progress-bar');
        }
        $li.find('p.state').text('上传中');
        $percent.css('width', percentage * 100 + '%');
        ++startIndex;
    });
    //文件上传失败会派送uploadError事件，
    //成功则派送uploadSuccess事件。
    //不管成功或者失败，在文件上传完后都会触发uploadComplete事件。
    uploader.on('uploadSuccess', function (file) {//成功
        startIndex = 0;
        $('#' + file.id).find('p.state').text('已上传');
        //alert(1);
    });
    
    uploader.on('uploadError', function (file) {//报错
        startIndex = 0;
        $('#' + file.id).find('p.state').text('上传出错');
    });

    uploader.on('uploadComplete', function (file) {
        alert(3);
        $('#' + file.id).find('.progress').fadeOut();
    });


    // 文件上传过程中创建进度条实时显示。
    uploader.on('uploadProgress', function (file, percentage) {
        var $li = $('#' + file.id),
            $percent = $li.find('.progress .progress-bar');

        // 避免重复创建
        if (!$percent.length) {
            $percent = $('<div class="progress progress-striped active">' +
              '<div class="progress-bar" role="progressbar" style="width: 0%">' +
              '</div>' +
            '</div>').appendTo($li).find('.progress-bar');
        }

        $li.find('p.state').text('上传中');

        $percent.css('width', percentage * 100 + '%');
    });
    //上传事件
    $("#ctlBtn").click(function () {
        uploader.upload();
    });
    ////////////////

</script>
